var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ChoiceSelectedEvent.html",[0,1.047,1,1.315]],["body/interfaces/ChoiceSelectedEvent.html",[0,0.962,1,1.209,2,0.492,3,0.387,4,0.297,5,0.492,6,1.057,7,0.99,8,0.619,9,1.539,10,1.788,11,2.305,12,1.672,13,0.092,14,1.539,15,0.954,16,1.887,17,1.539,18,0.461,19,1.209,20,2.129,21,0.778,22,1.887,23,1.539,24,2.129,25,1.887,26,0.297,27,1.539,28,0.939,29,0.778,30,0.99,31,0.99,32,0.738,33,0.601,34,0.387,35,0.778,36,0.962,37,0.778,38,0.99,39,0.99,40,0.99,41,0.619,42,0.601,43,0.901,44,1.811,45,2.129,46,0.387,47,0.619,48,0.387,49,0.387,50,0.778,51,1.539,52,1.539,53,1.214,54,0.99,55,0.99,56,0.99,57,0.778,58,0.051,59,1.539,60,0.99,61,0.99,62,0.778,63,0.778,64,0.778,65,0.99,66,0.99,67,0.99,68,1.483,69,0.317,70,0.99,71,0.99,72,1.18,73,0.99,74,0.778,75,0.492,76,0.99,77,0.492,78,0.99,79,1.887,80,0.99,81,0.99,82,1.672,83,0.99,84,1.539,85,1.887,86,0.99,87,1.209,88,0.99,89,1.526,90,1.441,91,0.99,92,1.539,93,0.99,94,0.778,95,0.99,96,0.778,97,0.99,98,0.99,99,0.99,100,0.99,101,2.068,102,1.539,103,0.99,104,1.209,105,0.99,106,0.99,107,0.99,108,0.99,109,0.99,110,0.619,111,1.539,112,0.99,113,0.99,114,0.99,115,0.99,116,2.633,117,0.99,118,2.129,119,2.365,120,1.539,121,2.129,122,0.99,123,1.539,124,1.887,125,0.99,126,0.99,127,0.99,128,0.99,129,0.99,130,0.99,131,0.99,132,0.99,133,0.99,134,1.539,135,0.99,136,0.99,137,0.778,138,0.99,139,1.539,140,0.99,141,1.483,142,1.209,143,1.539,144,0.99,145,0.99,146,0.99,147,0.99,148,1.539,149,0.99,150,0.99,151,0.778,152,1.539,153,2.129,154,0.99,155,0.99,156,0.99,157,0.99,158,0.99,159,0.99,160,0.99,161,0.99,162,0.99,163,0.99,164,0.99,165,0.99,166,0.99,167,0.99,168,1.539,169,0.99,170,0.99,171,0.99,172,0.99,173,0.99,174,0.99,175,0.99,176,0.99,177,1.539,178,0.99,179,0.99,180,0.99,181,1.887,182,0.99,183,1.887,184,0.99,185,1.887,186,0.99,187,0.99,188,0.99,189,0.99,190,0.99,191,0.99,192,0.99,193,0.99,194,0.042]],["title/components/TextInputAutocompleteContainerComponent.html",[69,0.249,195,1.047]],["body/components/TextInputAutocompleteContainerComponent.html",[2,0.995,3,0.782,4,0.599,5,0.995,6,1.178,13,0.09,15,0.782,18,0.759,26,0.599,32,0.782,33,1.142,34,1.178,42,0.782,46,1.178,47,1.25,48,0.782,49,0.782,53,0.995,58,0.069,64,1.989,69,0.449,77,1.259,194,0.069,195,1.826,196,2,197,2,198,2.651,199,1.571,200,2.294,201,3.357,202,2.532,203,2.532,204,3.357,205,2.532,206,2.532,207,2,208,2.532,209,1.989,210,2.921,211,2,212,2.183,213,2,214,2]],["title/directives/TextInputAutocompleteDirective.html",[18,0.502,49,0.654]],["body/directives/TextInputAutocompleteDirective.html",[0,0.498,1,0.625,2,0.396,3,0.311,4,0.238,5,1.404,6,1.2,7,0.796,8,0.498,10,1.743,11,1.293,12,1.836,13,0.092,15,0.867,16,2.218,17,1.293,18,0.49,19,1.478,20,2.337,21,1.283,22,2.337,23,1.634,24,2.218,25,2.337,26,0.238,27,1.293,28,0.936,29,0.625,30,0.796,31,0.796,32,0.809,33,0.639,34,0.311,35,0.625,36,0.809,37,0.625,38,0.796,39,0.796,40,0.796,41,0.498,42,0.506,43,0.809,44,1.742,45,1.882,46,0.506,47,0.809,48,0.311,49,0.506,50,1.016,51,1.882,52,1.882,53,1.317,54,1.293,55,1.634,56,1.293,57,1.016,58,0.051,59,1.882,60,1.634,61,1.293,62,1.016,63,1.016,64,1.016,65,1.293,66,1.293,67,1.634,68,1.478,69,0.33,70,1.293,71,1.293,72,1.523,73,1.293,74,1.016,75,0.643,76,1.293,77,0.643,78,1.634,79,2.218,80,1.293,81,1.634,82,1.478,83,1.293,84,1.882,85,2.218,86,1.634,87,1.742,88,1.293,89,1.574,90,1.523,91,1.293,92,1.634,93,1.634,94,0.625,95,1.293,96,1.016,97,1.634,98,0.796,99,0.796,100,0.796,101,1.913,102,1.293,103,0.796,104,1.016,105,1.293,106,1.882,107,0.796,108,1.293,109,0.796,110,0.498,111,1.293,112,0.796,113,0.796,114,1.293,115,0.796,116,2.435,117,0.796,118,1.882,119,2.266,120,1.293,121,1.882,122,0.796,123,1.293,124,1.634,125,0.796,126,0.796,127,0.796,128,0.796,129,0.796,130,0.796,131,0.796,132,0.796,133,0.796,134,1.293,135,0.796,136,0.796,137,0.625,138,0.796,139,1.293,140,0.796,141,1.283,142,1.016,143,1.293,144,0.796,145,0.796,146,0.796,147,0.796,148,1.293,149,0.796,150,0.796,151,1.742,152,1.293,153,1.882,154,0.796,155,0.796,156,0.796,157,0.796,158,0.796,159,0.796,160,0.796,161,0.796,162,0.796,163,0.796,164,0.796,165,0.796,166,0.796,167,0.796,168,1.293,169,0.796,170,0.796,171,0.796,172,0.796,173,0.796,174,0.796,175,1.293,176,1.634,177,1.293,178,0.796,179,0.796,180,0.796,181,1.634,182,0.796,183,1.634,184,0.796,185,1.634,186,0.796,187,0.796,188,0.796,189,0.796,190,0.796,191,0.796,192,0.796,193,0.796,194,0.035,199,0.625,212,1.016,215,1.715,216,1.715,217,1.634,218,1.715,219,1.055,220,2.787,221,1.055,222,1.293,223,2.07,224,1.055,225,1.055,226,1.055,227,1.055,228,1.055,229,1.055,230,1.283,231,1.055,232,1.055,233,1.055,234,1.055,235,1.293,236,1.055,237,1.055,238,1.055,239,1.055,240,1.055]],["title/components/TextInputAutocompleteMenuComponent.html",[32,0.654,69,0.249]],["body/components/TextInputAutocompleteMenuComponent.html",[2,0.533,3,0.419,4,0.321,5,1.482,6,1.201,8,1.495,9,1.636,10,1.796,12,2.122,13,0.092,14,1.636,15,0.64,18,0.49,19,1.744,21,1.559,26,0.321,32,0.868,33,0.868,34,1.201,36,1.241,37,0.842,42,0.419,44,1.878,46,0.934,47,0.671,48,0.419,49,0.419,53,1.344,58,0.044,68,1.285,69,0.356,72,0.671,77,0.814,82,1.285,89,1.241,90,1.023,94,1.744,101,1.285,104,1.285,119,1.878,137,1.744,141,0.842,142,0.842,151,1.559,194,0.044,195,0.671,196,1.073,197,1.073,199,0.842,200,1.744,202,1.636,203,2.22,205,1.636,206,1.984,207,1.073,208,1.636,209,1.285,210,2.22,211,1.073,212,1.744,213,1.073,214,1.073,220,2.948,222,1.073,223,1.984,230,1.979,235,1.984,241,1.422,242,1.636,243,1.636,244,1.636,245,2.169,246,2.169,247,2.169,248,1.636,249,2.63,250,2.63,251,2.63,252,2.63,253,2.943,254,2.943,255,2.943,256,2.943,257,2.943,258,2.943,259,2.169,260,2.169,261,2.169,262,1.422,263,2.52,264,1.422,265,1.422,266,1.422,267,1.422,268,1.422,269,1.422,270,1.422,271,1.422,272,1.422,273,2.169,274,1.422,275,1.422,276,1.422,277,1.422,278,2.169,279,2.943,280,1.422,281,1.422,282,1.422,283,1.422,284,1.422,285,1.422,286,1.422,287,1.422,288,1.422,289,1.422,290,1.422,291,2.169,292,1.422,293,2.52,294,1.422,295,2.169,296,1.422,297,1.422,298,1.422,299,2.63,300,2.63,301,2.169,302,2.169,303,1.422,304,1.422,305,1.422,306,1.422,307,1.422,308,1.422,309,1.422,310,1.422,311,1.422,312,1.422,313,1.422,314,1.422,315,1.422,316,1.422,317,1.422,318,1.422,319,1.422,320,1.073,321,1.422,322,1.422]],["title/modules/TextInputAutocompleteModule.html",[323,0.654,324,1.047]],["body/modules/TextInputAutocompleteModule.html",[2,1.059,3,0.832,4,0.638,5,1.059,6,1.168,13,0.091,15,1.222,26,0.638,32,1.239,33,1.118,34,1.03,35,1.673,42,1.118,48,0.832,49,1.2,58,0.071,194,0.071,195,1.92,323,0.832,324,1.647,325,2.823,326,3.492,327,3.492,328,2.634,329,3.492,330,2.823,331,2.823,332,2.823]],["title/changelog.html",[43,0.552,333,1.11,334,1.873]],["body/changelog.html",[4,0.556,13,0.065,28,0.923,41,1.16,46,0.725,50,1.458,53,1.501,58,0.065,63,2.107,69,0.276,72,1.16,75,1.2,110,1.16,194,0.065,217,1.856,242,1.856,243,1.856,244,2.414,320,1.856,335,3.556,336,2.46,337,2.46,338,2.46,339,1.458,340,2.46,341,2.46,342,2.46,343,2.46,344,2.46,345,2.46,346,3.2,347,3.2,348,2.46,349,3.904,350,3.904,351,2.46,352,2.46,353,2.46,354,2.46,355,2.46,356,2.46,357,3.556,358,3.2,359,2.46,360,2.46,361,2.46,362,2.46,363,3.766,364,3.556,365,2.46,366,2.46,367,3.904,368,2.46,369,2.46,370,2.46,371,2.46,372,2.46,373,2.46,374,2.46,375,2.46,376,2.46,377,1.856,378,2.46,379,2.46,380,2.841,381,2.46,382,3.556,383,2.46,384,2.46,385,2.46,386,2.46,387,2.682,388,2.46,389,2.46,390,2.46,391,2.46,392,2.46,393,2.414,394,2.46,395,3.2,396,1.856,397,1.16,398,2.46,399,2.46,400,2.46,401,2.46,402,2.46,403,2.46,404,2.46,405,1.856,406,2.46,407,2.46,408,2.46]],["title/dependencies.html",[393,1.413,397,1.254]],["body/dependencies.html",[13,0.087,26,0.751,28,1.246,29,1.969,41,1.567,58,0.079,194,0.079,396,2.506,397,1.816,409,3.322,410,3.322,411,3.322]],["title/index.html",[8,0.884,43,0.552,333,1.11]],["body/index.html",[3,0.849,6,1.155,10,0.992,13,0.09,15,1.092,18,0.475,26,0.651,28,0.789,33,1.155,34,1.042,42,0.969,43,0.849,46,0.62,48,0.849,58,0.059,69,0.397,74,1.246,75,1.081,77,0.789,87,1.246,89,1.359,90,1.359,96,1.246,110,1.55,194,0.059,200,1.246,209,1.246,248,2.173,263,2.479,323,0.849,324,1.359,328,2.173,339,1.948,377,2.173,380,1.586,387,2.794,397,0.992,412,3.287,413,2.881,414,2.103,415,2.103,416,3.989,417,3.536,418,1.246,419,2.103,420,2.103,421,2.103,422,2.103,423,4.046,424,2.881,425,2.103,426,2.103,427,2.103,428,2.103,429,3.536,430,2.103,431,1.586,432,3.287,433,2.881,434,2.103,435,2.103,436,2.103,437,2.103,438,2.103,439,2.103,440,2.103,441,2.103,442,2.103,443,2.103,444,2.103,445,2.103,446,2.103,447,1.586,448,2.103,449,2.103,450,2.103,451,2.103,452,2.103,453,2.103,454,2.103,455,2.103,456,2.103,457,2.103,458,2.881,459,2.103,460,2.103,461,2.103,462,2.103,463,2.103,464,2.103,465,2.103,466,2.103,467,2.103,468,2.881,469,3.825,470,2.103,471,2.103,472,2.103,473,3.704,474,2.103,475,2.103,476,2.103,477,2.103,478,1.586]],["title/license.html",[43,0.552,333,1.11,418,1.11]],["body/license.html",[4,0.606,13,0.069,36,1.265,57,1.589,58,0.069,62,1.589,75,1.269,194,0.069,230,1.589,339,1.589,405,2.024,418,1.589,431,2.794,447,2.794,478,2.551,479,3.704,480,2.683,481,2.683,482,2.683,483,3.382,484,2.683,485,2.683,486,2.683,487,2.683,488,3.382,489,2.683,490,3.889,491,4.242,492,2.683,493,3.382,494,2.683,495,3.382,496,2.683,497,2.683,498,2.683,499,2.683,500,2.683,501,2.683,502,2.683,503,2.683,504,2.683,505,2.683,506,2.683,507,2.683,508,2.683,509,3.382,510,3.382,511,2.683,512,2.683,513,2.683,514,3.382,515,2.683,516,2.683,517,2.683,518,2.683,519,2.683,520,2.683,521,2.683,522,2.683,523,2.683,524,2.683,525,2.683,526,2.683,527,2.683,528,2.683,529,2.683,530,2.683,531,2.683,532,2.683,533,2.683,534,2.683]],["title/modules.html",[323,0.881]],["body/modules.html",[13,0.08,58,0.08,194,0.08,323,1.009,324,1.615,535,3.423]],["title/overview.html",[536,2.254]],["body/overview.html",[0,1.586,13,0.079,18,0.76,58,0.079,69,0.378,194,0.079,293,3.08,323,0.991,536,2.536,537,3.362]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":137,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["0.1.0",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":293,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"overview.html":{}}}],["1.1.0",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":184,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["10",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["11a32ad",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":537,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":245,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["2017",{"_index":405,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["4e02a45",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":380,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["7a8ca90",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["8000",{"_index":471,"title":{},"body":{"index.html":{}}}],["800f07d",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["8d8af83",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["_choic",{"_index":288,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["abov",{"_index":508,"title":{},"body":{"license.html":{}}}],["accept",{"_index":88,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["accessor",{"_index":281,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["action",{"_index":528,"title":{},"body":{"license.html":{}}}],["activ",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["activechoic",{"_index":253,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["actual_compon",{"_index":214,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ad",{"_index":419,"title":{},"body":{"index.html":{}}}],["add",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["ancestor",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":502,"title":{},"body":{"license.html":{}}}],["angular",{"_index":387,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":330,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["angular/cor",{"_index":26,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartextinputautocomplet",{"_index":450,"title":{},"body":{"index.html":{}}}],["app",{"_index":432,"title":{},"body":{"index.html":{}}}],["appear",{"_index":54,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["argument",{"_index":235,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["aris",{"_index":532,"title":{},"body":{"license.html":{}}}],["around",{"_index":420,"title":{},"body":{"index.html":{}}}],["array",{"_index":91,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["arrow",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":492,"title":{},"body":{"license.html":{}}}],["author",{"_index":522,"title":{},"body":{"license.html":{}}}],["auto",{"_index":248,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["autocomplet",{"_index":34,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["autocomplete.direct",{"_index":331,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete.directive.t",{"_index":7,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:106",{"_index":237,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:149",{"_index":234,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:213",{"_index":240,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:37",{"_index":229,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:42",{"_index":228,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:47",{"_index":224,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:53",{"_index":227,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:58",{"_index":233,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:63",{"_index":232,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:68",{"_index":231,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:73",{"_index":225,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:78",{"_index":226,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:89",{"_index":221,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:99",{"_index":239,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.module.t",{"_index":325,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete/doc",{"_index":456,"title":{},"body":{"index.html":{}}}],["autocompletefor",{"_index":425,"title":{},"body":{"index.html":{}}}],["avail",{"_index":71,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["behavior",{"_index":320,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["block",{"_index":206,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["blur",{"_index":217,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["break",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":535,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":427,"title":{},"body":{"index.html":{}}}],["bug",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":74,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["bundler",{"_index":448,"title":{},"body":{"index.html":{}}}],["c",{"_index":480,"title":{},"body":{"license.html":{}}}],["c105a40",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["c9ff811",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":79,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["caret",{"_index":29,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{}}}],["caretposit",{"_index":156,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["catch(err",{"_index":125,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["chang",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":334,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":51,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["charg",{"_index":487,"title":{},"body":{"license.html":{}}}],["choic",{"_index":10,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["choice.id",{"_index":279,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceload",{"_index":255,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceloaderror",{"_index":254,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices(choic",{"_index":290,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.indexof(this.activechoic",{"_index":292,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.length",{"_index":294,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices[0",{"_index":296,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceselect",{"_index":86,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["choiceselectedev",{"_index":1,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["claim",{"_index":525,"title":{},"body":{"license.html":{}}}],["class",{"_index":48,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["class=\"dropdown",{"_index":250,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["close",{"_index":63,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["closemenuonblur",{"_index":67,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["commit",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":329,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["compil",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":454,"title":{},"body":{"index.html":{}}}],["compon",{"_index":69,"title":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":211,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["componentfactoryresolv",{"_index":16,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["componentref",{"_index":17,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["compos",{"_index":421,"title":{},"body":{"index.html":{}}}],["condit",{"_index":507,"title":{},"body":{"license.html":{}}}],["connect",{"_index":534,"title":{},"body":{"license.html":{}}}],["const",{"_index":119,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["constructor(componentfactoryresolv",{"_index":219,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["contain",{"_index":201,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["container'},{'nam",{"_index":213,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["container.compon",{"_index":332,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["container.component.t",{"_index":198,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["content",{"_index":415,"title":{},"body":{"index.html":{}}}],["continu",{"_index":475,"title":{},"body":{"index.html":{}}}],["contract",{"_index":529,"title":{},"body":{"license.html":{}}}],["control",{"_index":164,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["copi",{"_index":490,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":479,"title":{},"body":{"license.html":{}}}],["correct",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":465,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":120,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["custom",{"_index":76,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["d2b7cd1",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":526,"title":{},"body":{"license.html":{}}}],["de22714",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":493,"title":{},"body":{"license.html":{}}}],["declar",{"_index":326,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["decor",{"_index":272,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["default",{"_index":223,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["defin",{"_index":220,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["demo",{"_index":412,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":437,"title":{},"body":{"index.html":{}}}],["depend",{"_index":397,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dev",{"_index":464,"title":{},"body":{"index.html":{}}}],["develop",{"_index":417,"title":{},"body":{"index.html":{}}}],["direct",{"_index":18,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":466,"title":{},"body":{"index.html":{}}}],["display",{"_index":205,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["distribut",{"_index":500,"title":{},"body":{"license.html":{}}}],["document",{"_index":339,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document:keydown.arrowdown",{"_index":259,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowdown(ev",{"_index":262,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup",{"_index":260,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup(ev",{"_index":265,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.ent",{"_index":261,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.enter(ev",{"_index":267,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dom",{"_index":196,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdown",{"_index":242,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["dropdownmenu",{"_index":249,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdownmenuel",{"_index":256,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["element",{"_index":209,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["elementref",{"_index":19,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["elm",{"_index":106,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["end",{"_index":45,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["entrycompon",{"_index":327,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["environ",{"_index":461,"title":{},"body":{"index.html":{}}}],["err",{"_index":127,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event",{"_index":230,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["event('input",{"_index":167,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.key",{"_index":108,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.preventdefault",{"_index":299,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["event.target.valu",{"_index":114,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["eventemitt",{"_index":20,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["everyth",{"_index":449,"title":{},"body":{"index.html":{}}}],["export",{"_index":42,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["express",{"_index":57,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["extend",{"_index":73,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["f8cf905",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":68,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["featur",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":435,"title":{},"body":{"index.html":{}}}],["find",{"_index":445,"title":{},"body":{"index.html":{}}}],["findchoic",{"_index":93,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["findchoices(searchtext",{"_index":439,"title":{},"body":{"index.html":{}}}],["fit",{"_index":518,"title":{},"body":{"license.html":{}}}],["fix",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["focu",{"_index":66,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["follow",{"_index":506,"title":{},"body":{"license.html":{}}}],["fontsiz",{"_index":181,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["fontsizestr",{"_index":179,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["forc",{"_index":160,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["form",{"_index":163,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["format",{"_index":95,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["formcontrolvalu",{"_index":438,"title":{},"body":{"index.html":{}}}],["free",{"_index":486,"title":{},"body":{"license.html":{}}}],["fulltemplatetypecheck",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":87,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["furnish",{"_index":505,"title":{},"body":{"license.html":{}}}],["gener",{"_index":452,"title":{},"body":{"index.html":{}}}],["get",{"_index":333,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getcaretcoordin",{"_index":27,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoic",{"_index":282,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["getchoicelabel",{"_index":97,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoicelabel(choic",{"_index":444,"title":{},"body":{"index.html":{}}}],["getcomputedstyle(elm).fonts",{"_index":180,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getcomputedstyle(elm).lineheight",{"_index":178,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getlineheight",{"_index":216,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["getlineheight(elm",{"_index":175,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["grant",{"_index":485,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":244,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["here",{"_index":455,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":484,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":83,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hidemenu",{"_index":189,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["higher",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":458,"title":{},"body":{"index.html":{}}}],["holder",{"_index":523,"title":{},"body":{"license.html":{}}}],["host",{"_index":64,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('blur",{"_index":128,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":297,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":303,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.ent",{"_index":305,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('input",{"_index":113,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keypress",{"_index":107,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["html",{"_index":208,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["htmlelement",{"_index":176,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["htmltextareael",{"_index":150,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":413,"title":{},"body":{"index.html":{}}}],["ignor",{"_index":39,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["implement",{"_index":50,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["impli",{"_index":516,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["includ",{"_index":431,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["initi",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["input",{"_index":6,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["input(valu",{"_index":236,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["insertedat",{"_index":11,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["instal",{"_index":416,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"overview.html":{}}}],["isn't",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["item.tolowercase().includes(searchtext.tolowercas",{"_index":443,"title":{},"body":{"index.html":{}}}],["jane",{"_index":441,"title":{},"body":{"index.html":{}}}],["john",{"_index":440,"title":{},"body":{"index.html":{}}}],["jonny'].filter(item",{"_index":442,"title":{},"body":{"index.html":{}}}],["key",{"_index":110,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["keyboardev",{"_index":263,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["keyboardeventkeypolyfil",{"_index":433,"title":{},"body":{"index.html":{}}}],["keypress",{"_index":218,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress(key",{"_index":238,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["kind",{"_index":515,"title":{},"body":{"license.html":{}}}],["label",{"_index":148,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label).length",{"_index":169,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label.length",{"_index":173,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lastcaretposit",{"_index":103,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["left",{"_index":142,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["legend",{"_index":207,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["lewi",{"_index":482,"title":{},"body":{"license.html":{}}}],["li",{"_index":313,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.getboundingclientrect",{"_index":316,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.scrollintoview",{"_index":319,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liabil",{"_index":527,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":524,"title":{},"body":{"license.html":{}}}],["licens",{"_index":418,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":495,"title":{},"body":{"license.html":{}}}],["line",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["lineheight",{"_index":139,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightnum",{"_index":185,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightstr",{"_index":177,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightstr.tolowercas",{"_index":187,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["liposit",{"_index":315,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liposition.top",{"_index":317,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liter",{"_index":14,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["local",{"_index":463,"title":{},"body":{"index.html":{}}}],["locat",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["lose",{"_index":65,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["match",{"_index":58,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matt",{"_index":481,"title":{},"body":{"license.html":{}}}],["max",{"_index":243,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["member",{"_index":99,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menu",{"_index":53,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["menu.compon",{"_index":35,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["menu.component.t",{"_index":241,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":274,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":275,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":277,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":269,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":276,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":270,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":271,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":280,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":285,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":283,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":264,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":266,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":268,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menucompon",{"_index":78,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menufactori",{"_index":134,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menuhidden",{"_index":84,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menushown",{"_index":81,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["merchant",{"_index":517,"title":{},"body":{"license.html":{}}}],["merg",{"_index":498,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":199,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["method",{"_index":215,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["mit",{"_index":478,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":162,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["modifi",{"_index":497,"title":{},"body":{"license.html":{}}}],["modul",{"_index":323,"title":{"modules/TextInputAutocompleteModule.html":{},"modules.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multipl",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["mwl",{"_index":200,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["mymodul",{"_index":434,"title":{},"body":{"index.html":{}}}],["name",{"_index":212,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["namespac",{"_index":451,"title":{},"body":{"index.html":{}}}],["nearest",{"_index":322,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["need",{"_index":428,"title":{},"body":{"index.html":{}}}],["new",{"_index":82,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ng",{"_index":161,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ngmodul",{"_index":328,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":193,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["node.j",{"_index":462,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":521,"title":{},"body":{"license.html":{}}}],["normal",{"_index":183,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["notabl",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":509,"title":{},"body":{"license.html":{}}}],["now",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":423,"title":{},"body":{"index.html":{}}}],["number",{"_index":44,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["obtain",{"_index":489,"title":{},"body":{"license.html":{}}}],["older",{"_index":426,"title":{},"body":{"index.html":{}}}],["on",{"_index":436,"title":{},"body":{"index.html":{}}}],["onarrowdown(ev",{"_index":298,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onarrowup(ev",{"_index":304,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onblur",{"_index":129,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onc",{"_index":96,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["onchange(valu",{"_index":115,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onenter(ev",{"_index":306,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onkeypress(key",{"_index":109,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["option",{"_index":72,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["order",{"_index":100,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["otherwis",{"_index":531,"title":{},"body":{"license.html":{}}}],["out",{"_index":533,"title":{},"body":{"license.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["overflow",{"_index":246,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["overview",{"_index":536,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":393,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["paramet",{"_index":222,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["parsefloat(lineheightstr",{"_index":186,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["part",{"_index":459,"title":{},"body":{"index.html":{}}}],["particular",{"_index":519,"title":{},"body":{"license.html":{}}}],["peer",{"_index":396,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permiss",{"_index":483,"title":{},"body":{"license.html":{}}}],["permit",{"_index":504,"title":{},"body":{"license.html":{}}}],["person",{"_index":488,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this.menuhidden",{"_index":146,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["polyfil",{"_index":429,"title":{},"body":{"index.html":{}}}],["polyfillthen",{"_index":430,"title":{},"body":{"index.html":{}}}],["port",{"_index":470,"title":{},"body":{"index.html":{}}}],["portion",{"_index":512,"title":{},"body":{"license.html":{}}}],["posit",{"_index":203,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["prepar",{"_index":460,"title":{},"body":{"index.html":{}}}],["privat",{"_index":101,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["project",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":92,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["provid",{"_index":513,"title":{},"body":{"license.html":{}}}],["publish",{"_index":499,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":520,"title":{},"body":{"license.html":{}}}],["px",{"_index":41,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["regular",{"_index":56,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["rel",{"_index":204,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["relat",{"_index":457,"title":{},"body":{"index.html":{}}}],["releas",{"_index":476,"title":{},"body":{"index.html":{}}}],["releaselicens",{"_index":477,"title":{},"body":{"index.html":{}}}],["reload",{"_index":472,"title":{},"body":{"index.html":{}}}],["repo",{"_index":467,"title":{},"body":{"index.html":{}}}],["requir",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":494,"title":{},"body":{"license.html":{}}}],["result",{"_index":194,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":90,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["right",{"_index":496,"title":{},"body":{"license.html":{}}}],["run",{"_index":469,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["rxjs/oper",{"_index":31,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["save",{"_index":424,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["scrollabl",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["scrollbar",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["scrolltochoice(index",{"_index":308,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["search",{"_index":59,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchregexp",{"_index":60,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchtext",{"_index":94,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["see",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":85,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["selectchoic",{"_index":257,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["selector",{"_index":46,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["sell",{"_index":503,"title":{},"body":{"license.html":{}}}],["server",{"_index":468,"title":{},"body":{"index.html":{}}}],["set",{"_index":289,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setchoices(choic",{"_index":284,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setcursorat",{"_index":168,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shall",{"_index":510,"title":{},"body":{"license.html":{}}}],["show",{"_index":70,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["showmenu",{"_index":133,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shown",{"_index":80,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["smooth",{"_index":321,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["softwar",{"_index":491,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["src/text",{"_index":5,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["standard",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":43,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["startindex",{"_index":153,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["string",{"_index":89,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style",{"_index":202,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.left.px]=\"position?.left",{"_index":252,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.top.px]=\"position?.top",{"_index":251,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["subject",{"_index":36,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["sublicens",{"_index":501,"title":{},"body":{"license.html":{}}}],["subscribe(choic",{"_index":147,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["substanti",{"_index":511,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":414,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":30,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["templat",{"_index":77,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["test",{"_index":473,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":474,"title":{},"body":{"index.html":{}}}],["text",{"_index":33,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textarea",{"_index":28,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["textarea.dispatchevent(new",{"_index":166,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.focu",{"_index":171,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.selectionstart",{"_index":158,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.setselectionrange(setcursorat",{"_index":170,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.valu",{"_index":152,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea[mwltextinputautocomplete],input[type=\"text\"][mwltextinputautocomplet",{"_index":47,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["textinputautocompletecontainercompon",{"_index":195,"title":{"components/TextInputAutocompleteContainerComponent.html":{}},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletedirect",{"_index":49,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemenucompon",{"_index":32,"title":{"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemodul",{"_index":324,"title":{"modules/TextInputAutocompleteModule.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{}}}],["this._choic",{"_index":291,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this._choices[index",{"_index":309,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.activechoic",{"_index":295,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices.indexof(this.activechoic",{"_index":300,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices[index",{"_index":301,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choiceselected.emit",{"_index":172,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.closemenuonblur",{"_index":131,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.menucompon",{"_index":135,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.dropdownmenuel",{"_index":310,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.children[index",{"_index":314,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.getboundingclientrect",{"_index":312,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.elm.nativeel",{"_index":143,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.elm.nativeelement.selectionstart",{"_index":121,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getchoicelabel(choic",{"_index":149,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getlineheight(this.elm.nativeel",{"_index":140,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.hidemenu",{"_index":118,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.injector",{"_index":138,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu",{"_index":116,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.lastcaretposit",{"_index":157,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.triggercharacterposit",{"_index":154,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.changedetectorref.detectchang",{"_index":124,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.destroy",{"_index":190,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choic",{"_index":122,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceload",{"_index":123,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceloaderror",{"_index":126,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.posit",{"_index":144,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.selectchoic",{"_index":145,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.lastcaretposit",{"_index":130,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden$.next",{"_index":191,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden.emit",{"_index":192,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menushown.emit",{"_index":174,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.scrolltochoice(index",{"_index":302,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.selectchoice.next(this.activechoic",{"_index":307,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.showmenu",{"_index":112,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.triggercharact",{"_index":111,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.viewcontainerref.createcompon",{"_index":136,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["through",{"_index":422,"title":{},"body":{"index.html":{}}}],["top",{"_index":141,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["topx",{"_index":40,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["topx(fontsizestr",{"_index":182,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["topx(lineheightstr",{"_index":188,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tort",{"_index":530,"title":{},"body":{"license.html":{}}}],["trackbyid",{"_index":258,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["tree",{"_index":197,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["trigger",{"_index":52,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharact",{"_index":55,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharacterposit",{"_index":102,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["true",{"_index":132,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ts",{"_index":38,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tslint:dis",{"_index":98,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["typeof",{"_index":278,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposit",{"_index":311,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposition.bottom",{"_index":318,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["undefin",{"_index":104,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["updat",{"_index":165,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["upgrad",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":75,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":446,"title":{},"body":{"index.html":{}}}],["valu",{"_index":151,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["value.slice(0",{"_index":155,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value.slice(caretposit",{"_index":159,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value[this.menu.triggercharacterposit",{"_index":117,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["version",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":453,"title":{},"body":{"index.html":{}}}],["view",{"_index":377,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["viewchild",{"_index":273,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewchild('dropdownmenu",{"_index":287,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["void",{"_index":286,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["w",{"_index":61,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["warranti",{"_index":514,"title":{},"body":{"license.html":{}}}],["whether",{"_index":62,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["without",{"_index":447,"title":{},"body":{"index.html":{},"license.html":{}}}],["y",{"_index":247,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChoiceSelectedEvent.html":{"url":"interfaces/ChoiceSelectedEvent.html","title":"interface - ChoiceSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChoiceSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choice\n                                \n                                \n                                        insertedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choice\n                                    \n                                \n                                \n                                    \n                                        choice:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insertedAt\n                                    \n                                \n                                \n                                    \n                                        insertedAt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n// @ts-ignore\nimport toPX from 'to-px';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n\n      const lineHeight = this.getLineHeight(this.elm.nativeElement);\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  getLineHeight(elm: HTMLElement): number {\n    const lineHeightStr = getComputedStyle(elm).lineHeight || '';\n    const fontSizeStr = getComputedStyle(elm).fontSize || '';\n    const fontSize = +toPX(fontSizeStr);\n    const normal = 1.2;\n    const lineHeightNum = parseFloat(lineHeightStr);\n\n    if (lineHeightStr === lineHeightNum + '') {\n      return fontSize * lineHeightNum;\n    }\n\n    if (lineHeightStr.toLowerCase() === 'normal') {\n      return fontSize * normal;\n    }\n\n    return toPX(lineHeightStr);\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteContainerComponent.html":{"url":"components/TextInputAutocompleteContainerComponent.html","title":"component - TextInputAutocompleteContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-container\n            \n\n\n            \n                styles\n                \n      :host {\n        position: relative;\n        display: block;\n      }\n    \n            \n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n      :host {\n        position: relative;\n        display: block;\n      }\n    `\n  ],\n  template: ''\n})\nexport class TextInputAutocompleteContainerComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextInputAutocompleteDirective.html":{"url":"directives/TextInputAutocompleteDirective.html","title":"directive - TextInputAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TextInputAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLineHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenuOnBlur\n                            \n                            \n                                findChoices\n                            \n                            \n                                getChoiceLabel\n                            \n                            \n                                menuComponent\n                            \n                            \n                                searchRegexp\n                            \n                            \n                                triggerCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choiceSelected\n                            \n                            \n                                menuHidden\n                            \n                            \n                                menuShown\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                            \n                                keypress\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, injector: Injector, elm: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/text-input-autocomplete.directive.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeMenuOnBlur\n                    \n                    \n                        Whether to close the menu when the host textarea loses focus\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        findChoices\n                    \n                    \n                        A function that accepts a search string and returns an array of choices. Can also return a promise.\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getChoiceLabel\n                    \n                    \n                        A function that formats the selected choice once selected.\n\n                            \n                            Type:    function\n\n                            \n                        \n                            Default value: choice => choice\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuComponent\n                    \n                    \n                        The menu component to show with available options.\nYou can extend the built in TextInputAutocompleteMenuComponent component to use a custom template\n\n                        \n                            Default value: TextInputAutocompleteMenuComponent\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchRegexp\n                    \n                    \n                        The regular expression that will match the search text after the trigger character\n\n                        \n                            Default value: /^\\w*$/\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerCharacter\n                    \n                    \n                        The character that will trigger the menu to appear\n\n                        \n                            Default value: '@'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:37\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choiceSelected\n                    \n                    \n                        Called when a choice is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuHidden\n                    \n                    \n                        Called when the options menu is hidden\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuShown\n                    \n                    \n                        Called when the options menu is shown\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:58\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:149\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target.value' \n                        \n                    \n                \n                    \ninput(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keypress\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.key' \n                        \n                    \n                \n                    \nkeypress(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:99\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLineHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLineHeight(elm: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:213\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n// @ts-ignore\nimport toPX from 'to-px';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n\n      const lineHeight = this.getLineHeight(this.elm.nativeElement);\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  getLineHeight(elm: HTMLElement): number {\n    const lineHeightStr = getComputedStyle(elm).lineHeight || '';\n    const fontSizeStr = getComputedStyle(elm).fontSize || '';\n    const fontSize = +toPX(fontSizeStr);\n    const normal = 1.2;\n    const lineHeightNum = parseFloat(lineHeightStr);\n\n    if (lineHeightStr === lineHeightNum + '') {\n      return fontSize * lineHeightNum;\n    }\n\n    if (lineHeightStr.toLowerCase() === 'normal') {\n      return fontSize * normal;\n    }\n\n    return toPX(lineHeightStr);\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteMenuComponent.html":{"url":"components/TextInputAutocompleteMenuComponent.html","title":"component - TextInputAutocompleteMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-menu\n            \n\n\n            \n                styles\n                \n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    \n            \n\n            \n                template\n                 0\"\n  #dropdownMenu\n  class=\"dropdown-menu\"\n  [style.top.px]=\"position?.top\"\n  [style.left.px]=\"position?.left\">\n  \n    \n      {{ choice }}\n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChoice\n                            \n                            \n                                choiceLoadError\n                            \n                            \n                                choiceLoading\n                            \n                            \n                                dropdownMenuElement\n                            \n                            \n                                position\n                            \n                            \n                                searchText\n                            \n                            \n                                selectChoice\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.ArrowDown\n                            \n                            \n                                document:keydown.ArrowUp\n                            \n                            \n                                document:keydown.Enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowDown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowDown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowUp\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowUp(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.Enter\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.Enter(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeChoice:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoadError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoadError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownMenuElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropdownMenuElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectChoice:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackById:     \n\n                    \n                \n                    \n                        \n                            Default value : (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n\n                \n                    \n                        getchoices()\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:53\n                                \n                            \n\n                \n                    \n                        setchoices(choices: [])\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            choices\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-menu',\n  template: `\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n  trackById = (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice;\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n\n      if (\n        liPosition.top  ulPosition.bottom\n      ) {\n        li.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\"  #dropdownMenu  class=\"dropdown-menu\"  [style.top.px]=\"position?.top\"  [style.left.px]=\"position?.left\">            {{ choice }}      '\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextInputAutocompleteModule.html":{"url":"modules/TextInputAutocompleteModule.html","title":"module - TextInputAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TextInputAutocompleteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/text-input-autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TextInputAutocompleteContainerComponent\n                            \n                            \n                                TextInputAutocompleteDirective\n                            \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TextInputAutocompleteContainerComponent\n                            \n                            \n                                    TextInputAutocompleteDirective\n                            \n                            \n                                    TextInputAutocompleteMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.4.1 (2020-02-15)\nBug Fixes\n\ncorrect menu location if line-height of textarea isn't in px (7a8ca90)\n\n\n0.4.0 (2020-02-10)\nBug Fixes\n\nscroll behavior if menu has multiple scrollable ancestors (c105a40)\n\nFeatures\n\nadd option to close menu on blur (800f07d)\n\n\n0.3.0 (2018-07-08)\nFeatures\n\nadd a component selector to the dropdown menu (c9ff811), closes #8\n\n\n0.2.1 (2018-06-16)\nBug Fixes\n\nmenu: scroll active item into view when using arrow keys (de22714), closes #6\n\n\n0.2.0 (2018-05-14)\nFeatures\n\nadd max height and scrollbar to menu (11a32ad)\nupgrade to angular 6 (8d8af83)\n\nBREAKING CHANGES\n\nangular 6 or higher is now required to use this package\n\n\n0.1.2 (2018-05-05)\nBug Fixes\n\nallow angular 6 peer dependency (4e02a45)\n\n\n0.1.1 (2018-01-10)\nBug Fixes\n\nallow the package to be compiled with fullTemplateTypecheck (d2b7cd1)\n\n\n0.1.0 (2017-10-09)\nFeatures\n\ninitial implementation (f8cf905)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            textarea-caret : ^3.1.0\n        \n            to-px : ^1.1.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular text input autocomplete\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nA angular 6+ directive for adding autocomplete functionality to text input elements, built around composability\nInstallation\nInstall through npm:\nnpm install --save angular-text-input-autocompleteFor older browsers you will need the keyboardevent-key-polyfill polyfill:\nnpm install --save keyboardevent-key-polyfillThen include in your apps module:\nimport { polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\nimport { NgModule } from '@angular/core';\nimport { TextInputAutocompleteModule } from 'angular-text-input-autocomplete';\n\nkeyboardEventKeyPolyfill();\n\n@NgModule({\n  imports: [TextInputAutocompleteModule]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  formControlValue = '';\n\n  findChoices(searchText: string) {\n    return ['John', 'Jane', 'Jonny'].filter(item =>\n      item.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n\n  getChoiceLabel(choice: string) {\n    return `@${choice} `;\n  }\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported angularTextInputAutocomplete namespace\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/docs/\nRelated\nangular-text-input-highlight - a component for highlighting parts of a textarea\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TextInputAutocompleteModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
